plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-parcelize")
    id("kotlin-kapt")
    id("androidx.navigation.safeargs.kotlin")
    id("org.jlleitschuh.gradle.ktlint")
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "app.appworks.school.stylish"
        minSdkVersion 31
        targetSdkVersion 32
        versionCode 3
        versionName "1.2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "ab_testing"
    productFlavors {
        A {
            dimension "ab_testing"
        }

        B {
            dimension "ab_testing"
        }
    }

    buildTypes {
        release {
            buildConfigField("Boolean", "LOGGER_VISIABLE", "false")

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("Boolean", "LOGGER_VISIABLE", "true")
        }
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        // Determines whether to generate a BuildConfig class.
        buildConfig = true
        // Determines whether to support View Binding.
        // Note that the viewBinding.enabled property is now deprecated.
//        viewBinding = false
        // Determines whether to support Data Binding.
        // Note that the dataBinding.enabled property is now deprecated.
        dataBinding = true

        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.6'
    }
    namespace 'app.appworks.school.stylish'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // ViewModel and LiveData
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.0"

    // Room and Lifecycle dependencies
    implementation "androidx.room:room-runtime:$version_room"
    implementation 'androidx.test:core-ktx:1.5.0'
    implementation 'androidx.paging:paging-compose:1.0.0-alpha18'
    kapt "androidx.room:room-compiler:$version_room"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Core with Ktx
    implementation "androidx.core:core-ktx:$version_core"

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Moshi Codegen
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$version_moshi"

    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // Retrofit Logging Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$version_okhttp"
    testImplementation "com.squareup.okhttp3:mockwebserver:$version_okhttp"

    // Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"
    kapt "com.github.bumptech.glide:compiler:$version_glide"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:$version_paging"

    // Fragment
    implementation "androidx.fragment:fragment-ktx:$version_fragment"

    // Facebook Login only
    implementation 'com.facebook.android:facebook-login:latest.release'

    // Splash Screen
    implementation "androidx.core:core-splashscreen:$version_splashscreen"

    implementation 'com.google.accompanist:accompanist-pager:0.13.0'
    implementation 'com.google.accompanist:accompanist-pager-indicators:0.13.0'
    implementation "com.google.accompanist:accompanist-swiperefresh:0.13.0"
    implementation 'androidx.appcompat:appcompat:1.7.0-alpha02'
    implementation "androidx.compose.ui:ui:$version_compose"
    implementation "androidx.compose.foundation:foundation:$version_compose"
    implementation "androidx.compose.material:material:$version_compose"
    implementation "androidx.compose.ui:ui-tooling-preview:$version_compose"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"
    implementation "io.coil-kt:coil-compose:2.2.2"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    testImplementation "androidx.arch.core:core-testing:2.0.0"
    testImplementation 'org.mockito:mockito-core:3.10.0'

    androidTestImplementation "androidx.arch.core:core-testing:2.0.0"
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.5"
    androidTestImplementation 'org.mockito:mockito-android:3.10.0'
}

ktlint {
    android.set(true)
    outputColorName.set("RED")
}